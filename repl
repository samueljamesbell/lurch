#!/usr/bin/env ruby

require_relative 'lib/lurch'

# client should register with Dispatch (on inherit?)
# client < Handler with lowest priority.
# single, catch-all rule - if command not handled, calls a failure method on REPL
# otherwise, calls output method on REPL

class REPL < Lurch::Client
  def run
    loop do
      line = gets.chomp

      exit if line == "exit"

      event = Lurch::Event.new :command, 'sam', line

      Lurch::Dispatch.send event
    end
  end

  def accept message
    puts message
  end
end

client = REPL.new
client.run
